app-id: org.segmecam.SegmeCam
runtime: org.freedesktop.Platform
runtime-version: '23.08'
sdk: org.freedesktop.Sdk

command: segmecam-wrapper-nvidia.sh

finish-args:
  - --socket=fallback-x11
  - --socket=wayland
  - --share=ipc
  - --device=dri
  - --device=shm
  - --device=all
  - --socket=pulseaudio
  - --filesystem=xdg-pictures:ro
  - --filesystem=home:ro
  - --filesystem=/tmp
  - --filesystem=host
  - --share=network
  - --env=LD_LIBRARY_PATH=/app/lib
  - --env=DISPLAY=:0
  - --env=MESA_GL_VERSION_OVERRIDE=3.3
  - --env=MESA_GLSL_VERSION_OVERRIDE=330
  - --env=QT_X11_NO_MITSHM=1
  - --filesystem=/tmp/.X11-unix
  - --share=network

modules:
  - name: segmecam
    buildsystem: simple
    build-commands:
      # Create lib directory and install libraries
      - mkdir -p /app/lib
      
      # Copy our local lib files first (should contain GLU libraries)
      - cp -v lib/* /app/lib/ || echo "Failed to copy lib files"

      # Copy libraries from the flatpak-bundle directory
      - cp flatpak-bundle/lib/* /app/lib/ || true
      
      # Also install GLU library from the build system
      - |
        if [ -f /usr/lib/x86_64-linux-gnu/libGLU.so.1 ]; then
          cp -v /usr/lib/x86_64-linux-gnu/libGLU.so* /app/lib/
          echo "Copied system GLU libraries to /app/lib/"
        else
          echo "System GLU libraries not found"
        fi
        
      # List what we actually have in /app/lib
      - ls -la /app/lib/ | grep GLU || echo "No GLU libraries found in /app/lib/"
      
      # Install the wrapper script
      - install -Dm755 segmecam-wrapper-nvidia.sh /app/bin/segmecam-wrapper-nvidia.sh
      
      # Install the binary
      - install -Dm755 segmecam_gui_gpu /app/bin/segmecam_gui_gpu
      
      # Install graph files
      - mkdir -p /app/share/segmecam/mediapipe_graphs
      - cp selfie_seg_gpu_mask_cpu.pbtxt /app/share/segmecam/mediapipe_graphs/
      - cp face_and_seg_gpu_mask_cpu.pbtxt /app/share/segmecam/mediapipe_graphs/
      - cp face_tasks_and_seg_gpu_mask_cpu.pbtxt /app/share/segmecam/mediapipe_graphs/
      
      # Create symlink for graphs in working directory
      - ln -sf /app/share/segmecam/mediapipe_graphs /app/mediapipe_graphs
      
      # Create MediaPipe runfiles structure
      - mkdir -p /app/mediapipe_runfiles
      - cp MANIFEST /app/mediapipe_runfiles/
      - cp _repo_mapping /app/mediapipe_runfiles/
      - cp -r mediapipe /app/mediapipe_runfiles/
      - cp -r external /app/mediapipe_runfiles/
      
      # Create mediapipe/external symlink inside runfiles for model resolution
      - ln -sf /app/mediapipe_runfiles/external /app/mediapipe_runfiles/mediapipe/external
      
      # Fix permissions for all copied files
      - chmod -R u+w /app/mediapipe_runfiles/
      
      # Create MediaPipe external model directory and install face landmarker model
      - mkdir -p /app/mediapipe/external/com_google_mediapipe_face_landmarker_task/file
      - cp face_landmarker.task /app/mediapipe/external/com_google_mediapipe_face_landmarker_task/file/downloaded
      
      # Install desktop integration
      - install -Dm644 org.segmecam.SegmeCam.desktop /app/share/applications/org.segmecam.SegmeCam.desktop
      - install -Dm644 org.segmecam.SegmeCam.appdata.xml /app/share/metainfo/org.segmecam.SegmeCam.appdata.xml
      - install -Dm644 SegmeCam.png /app/share/icons/hicolor/256x256/apps/org.segmecam.SegmeCam.png
      
    sources:
      # Application binary and wrapper
      - type: file
        path: segmecam_gui_gpu
        dest-filename: segmecam_gui_gpu
      - type: file
        path: segmecam-wrapper-nvidia.sh
      
      # Desktop integration files
      - type: file
        path: org.segmecam.SegmeCam.desktop
      - type: file
        path: org.segmecam.SegmeCam.appdata.xml
      - type: file
        path: assets/SegmeCam.png
      
      # MediaPipe graphs
      - type: file
        path: mediapipe_graphs/selfie_seg_gpu_mask_cpu.pbtxt
        dest-filename: selfie_seg_gpu_mask_cpu.pbtxt
      - type: file
        path: mediapipe_graphs/face_and_seg_gpu_mask_cpu.pbtxt
        dest-filename: face_and_seg_gpu_mask_cpu.pbtxt
      - type: file
        path: mediapipe_graphs/face_tasks_and_seg_gpu_mask_cpu.pbtxt
        dest-filename: face_tasks_and_seg_gpu_mask_cpu.pbtxt
      
      # Models and dependencies
      - type: file
        path: models/tasks/face_landmarker.task
        dest-filename: face_landmarker.task
      - type: dir
        path: runfiles
      - type: dir
        path: flatpak-bundle
      - type: dir
        path: lib